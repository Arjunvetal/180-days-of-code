===========================
#Algorithms and data structure 
Topic:
-book Data structure in C++ by satraj sanhni
-robert lefer,
-Two main data types : 1) liner data types 2)Non linear data types
-data need to be organised
- linked list uses dynamic approach
-See the data structure real life problems around you
-other books Niklaus Wirth, Linus Torvalds

#computational thinking :
	-Problem solving process
	1.Pattern recognition
	2.decomposition
	3.Abstraction
	4.Algorithms design
	
Data - collection of  raw facts 
algorithm - outline the essence of a computational  procedure  step by step instructions
program-An implementation of an algorithm in some programming language
data structure - organization of data needed to solve the problem. Programatic way to use data efficiently
-algorithm: 

Problem= algorithm + data structure


#Algorithm : 
>step by step procedure to solve a particular problem

characteristics of Algorithm :
1.Input : some input must be provided
2. output : atleast one or more output must be generated
3.unambiguity : algorithm has to be very clear and simple
4.Finite : it must be have end
5.Effectiveness : each step must affects the overall process of execution.

#Performance of algorithm :
--------------------------------
1.Space
2.Time

>As our input values increases time and space for the program also increase means performance of algorithm is 
directly proportional to input values

Classification of data structure:
--------------------------------------
>Primitive DS
	>Integer 
	>character 
	>float
	>pointer
>Non Primitive DS
	>Arrays 
		>1-D
		>2-D
		>multi D
	>lists
		>Linear 
			>Stack 
			>queue
			>Linked list
		>Non linear 
			>Tree
			>Graph
		
Note: Interview que from array,linked list , tree , graph etc
### HW1 : Difference between linear and non linear data structure

#Abstract data structure (ADT):
>unclear info of an object is called abstract
>Abstract view - unclear info of object 
>Implementation view - actual implementation of hidden details of object
>java collection framework is inside the application prog
>APP prog  can access private and public data of data structure by using interface

### HW2: explain ADT in brief


#Arrays : 
>finite, homogeneous and ordered collection of  data elements
>starting point of array is called lower bound and 	end  point of array is called upper bound
>index of array is always start with '0' 
>memory allocation for data element after address calculation is called  memory mapping function
> Address (A[i]) = M + (i-L) X w
  size(A) = U-L+1
  
M: address of first location
i: ith location
L:lower bound
U:upper bound
w:

>Sparse matrices has majority elements are null
	>Types:
	>Diagonal 
	>Tri Diagonal

mxn : size of matrix
M: start address/base address

Row major order:	
A(ij)=M+(i-1)*n+j-1

A(13)=100 +(1-1)*3+3-1
	=102
	
column major order
A(ij)=M+(j-1)*m+i-1

A(34)=100+(4-1)*3+3-1
	=111
	

### HW3: menu driven program using switch case for array find(),insert(),delete(),Display() function in one class and call these fun in main method in other class 

Next class topics recursion,binary search 

-------------------------------------------------
Assignment : Day 1 DSA 
Q1) Linear VS Non-Linear 
Q2) ADT : Abstract Data Type
Q3)Array :
      insert () 
      search () 
      display () 
      delete() 
      Q2.1) without methods 
      Q2.2) with methods 
      Q2.3) do while - switch   case menu driven 
======================
Read about:
1) Sparse Matrix
2) Recursion
3) Search Algorithm
--------------------------------------------------

